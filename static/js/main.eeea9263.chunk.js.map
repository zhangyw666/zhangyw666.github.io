{"version":3,"sources":["auth-provider.ts","utils/http.ts","utils/index.ts","utils/use-async.ts","components/lib.tsx","context/auth-context.tsx","unauthenticated-app/register.tsx","unauthenticated-app/login.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticated-app/index.tsx","components/pin.tsx","utils/reorder.ts","utils/use-optimistic-options.ts","utils/project.ts","utils/url.ts","screens/project-list/util.ts","screens/project-list/list.tsx","utils/user.ts","components/id-select.tsx","components/user-select.tsx","screens/project-list/search-panel.tsx","screens/project-list/index.tsx","assets/software-logo.svg","utils/task.ts","screens/Kanban/util.ts","screens/project-list/project-model.tsx","screens/Epic/util.ts","screens/Epic/create-epic.tsx","utils/epic.ts","screens/Epic/index.tsx","components/drag-and-drap.tsx","utils/kanban.ts","utils/task-type.ts","assets/task.svg","assets/bug.svg","screens/Kanban/create-task.tsx","components/mark.tsx","screens/Kanban/kanban-column.tsx","screens/Kanban/create-kanban.tsx","components/task-type-select.tsx","screens/Kanban/search-panel.tsx","screens/Kanban/task-modal.tsx","screens/Kanban/index.tsx","screens/project/index.tsx","components/project-popver.tsx","components/user-popover.tsx","authenticated-app.tsx","components/error-boundary.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx"],"names":["localStorageKey","handleUserResponse","user","window","localStorage","setItem","token","apiUrl","process","logout","a","removeItem","http","endpoint","data","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","addQueryPrefix","body","JSON","fetch","then","res","status","auth","location","reload","Promise","reject","message","json","ok","useHttp","useAuth","useCallback","cleanObject","object","result","Object","keys","forEach","key","value","undefined","isVoid","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","useEffect","resetRoute","href","origin","defaultInitialState","stat","error","useSafeDispatch","dispatch","mountedRef","useMountedRef","useAsync","initialState","useReducer","state","action","safeDispatch","useState","retry","setRetry","setData","setError","run","promise","runConfig","Error","catch","isIdle","isLoading","isError","isSuccess","ErrorBox","Text","type","Row","styled","div","props","between","marginBottom","gap","FullPage","FullPageLoading","FullPageErrorFallback","ButtonNopadding","Button","ScreenContiner","bootstrapUser","getItem","AuthContext","React","createContext","displayName","AuthProvider","callback","children","setUser","queryClient","useQueryClient","Provider","login","form","register","clear","context","useContext","RegisterScreen","onError","onFinish","cpassword","values","password","Item","name","rules","required","placeholder","id","LongButton","loading","htmlType","LoginScreen","UnauthenticatedApp","isRegister","setIsRegister","Container","Header","Background","ShadowCard","Title","style","userSelect","onClick","h2","header","logo","left","right","Card","Pin","checked","onCheckedChange","restProps","count","onChange","num","reorder","fromId","referenceId","list","copiedList","movingItemIndex","findIndex","item","insertAfter","length","targetIndex","insertBefore","from","to","toItem","removedItem","splice","toIndex","indexOf","useConfig","queryKey","onSuccess","invalidateQueries","onMutate","target","previousItems","getQueryData","setQueryData","old","newItem","useDeleteConfig","filter","useAddConfig","useEditConfig","map","useProjects","param","client","useQuery","useEditProject","useMutation","params","useAddProject","useProject","enabled","useUrlQueryParam","useSearchParams","searchParams","setSearchParams","useMemo","reduce","prev","get","o","fromEntries","useProjectSearchParams","setParam","personId","Number","useProjectsQueryKey","useProjectModal","projectCreate","setProjectCreate","projectIdEdit","setProjectIdEdit","projectEdit","projectModalOpen","Boolean","open","close","startEdit","List","users","mutate","pagination","rowKey","project","columns","disabled","render","pin","sorter","b","localeCompare","String","dataIndex","find","created","dayjs","format","More","deleteProject","useDeleteProject","overlay","Modal","confirm","content","okText","onOk","confirmDeleteProject","useUsers","IdSelect","defaultOptionName","options","toNumber","Option","option","isNaN","UserSelect","SearchPanel","layout","evt","ProjectList","delay","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","useDebounce","dataSource","whyDidYouRender","_defs","_g","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSoftwareLogo","_ref","svgRef","titleId","viewBox","xmlns","focusable","className","ref","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fillRule","d","fill","ForwardRef","useTasks","useReorderTask","querykey","kanbanId","toKanbanId","useProjectIdInUrl","useLocation","pathname","match","useProjectInUrl","useKanbanSearchParams","projectId","useKanbansQueryKey","useTasksSearchParams","typeId","processorId","tagId","useTasksQueryKey","useTasksModal","editingTaskId","setEditingTaskId","useTask","editingTask","ProjectModel","mutateAsync","mutateLoading","useForm","setFieldsValue","forceRender","width","onClose","resetFields","visible","size","label","textAlign","useEpicSearchParams","useEpicsQueryKey","CreateEpic","useAddepic","addEpic","destroyOnClose","Epic","currentProject","epics","useEpics","tasks","deleteEpic","useDeleteEpic","epicCreateOpen","setEpicCreateOpen","overflow","minHeight","itemLayout","renderItem","epic","Meta","description","start","end","task","epicId","Drop","provided","isValidElement","cloneElement","droppableProps","innerRef","DropChild","forwardRef","Drag","draggableProps","dragHandleProps","useKanbans","useReorderKanban","useTaskTypes","CreateTask","setName","addTask","useAddTask","inputMode","setInputMode","submit","toggle","onBlur","autoFocus","onPressEnter","paddingLeft","Mark","keyword","arr","split","str","index","color","TaskTypeIcon","taskTypes","taskType","alt","src","taskIcon","bugIcon","TaskCard","marginLeft","marginRight","cursor","kanban","deleteKanban","useDeleteKanban","cancelText","KanbanColumn","allTasks","TasksContiner","direction","droppableId","draggableId","CreateKanban","addKanban","useAddKanban","TasksTypeSelect","useSetUrlSearchParam","labelCol","span","wrapperCol","TaskModal","useEditTask","editTask","editLoading","deleteTask","useDeleteTask","getFieldsValue","onCancel","confirmLoading","initialValues","fontSize","Kanban","kanbans","kanbanIsLoading","taskIsLoading","onDragEnd","useDragEnd","Top","ColumnContainer","display","reorderKanban","reorderTask","destination","toId","fromKanbanId","fromTask","toTask","Project","routeType","units","useRouteType","Continer","Aside","mode","selectedKeys","Main","path","element","replace","aside","ProjectPopover","projects","refetch","pinnedProjects","ContentContainer","onVisibleChange","placement","UserPopover","AuthenticatedApp","PageHeader","HeaderLeft","HeaderRight","User","lgout","createBrowserHistory","e","preventDefault","main","ErrorBoundary","fallbackRender","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","QueryClient","loadServer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eeea9263.chunk.js","sourcesContent":["// 模拟第三方服务\r\n\r\nimport { User } from 'types/User'\r\n\r\nconst localStorageKey = '__auth_provider_token__'\r\nexport const getToken = () => window.localStorage.getItem(localStorageKey)\r\n\r\n// 将请求返回的数据存入localStorage中，user的token\r\nexport const handleUserResponse = ({ user }: { user: User }) => {\r\n  window.localStorage.setItem(localStorageKey, user.token || '')\r\n  return user\r\n}\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\n\r\n// 封装login方法\r\n// 传入一个对象，里面是 username 和 password\r\nexport const login = (data: { username: string; password: string }) => {\r\n  // 发fetch请求\r\n  return fetch(`${apiUrl}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    // 转换data格式\r\n    body: JSON.stringify(data),\r\n  }).then(async (res: Response) => {\r\n    if (res.ok) {\r\n      // 将响应回的json，一个User类型数据，将其token 存入localStorage\r\n      // handleUserResponse 会 return 一个 user 将在auth-context里继续封装login方法的时候用到，下面register同理\r\n      return handleUserResponse(await res.json())\r\n    } else {\r\n      // 否则返回错误信息\r\n      return Promise.reject(await res.json())\r\n    }\r\n  })\r\n}\r\n\r\n// 封装register方法 传入一个对象，里面是 username 和 password\r\nexport const register = (data: { username: string; password: string }) => {\r\n  return fetch(`${apiUrl}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then(async (res: Response) => {\r\n    if (res.ok) {\r\n      return handleUserResponse(await res.json())\r\n    } else {\r\n      return Promise.reject(await res.json())\r\n    }\r\n  })\r\n}\r\n\r\n// 封装logout方法\r\nexport const logout = async () =>\r\n  // 清除localStorage里的数据\r\n  window.localStorage.removeItem(localStorageKey)\r\n","import qs from 'qs'\r\nimport * as auth from 'auth-provider'\r\nimport { useAuth } from 'context/auth-context'\r\nimport { useCallback } from 'react'\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\ninterface Config extends RequestInit {\r\n  token?: string\r\n  data?: object\r\n}\r\n\r\n// 封装fetch请求\r\nexport const http = async (\r\n  endpoint: string,\r\n  { data, token, headers, ...customConfig }: Config = {}\r\n) => {\r\n  const config = {\r\n    method: 'GET', //默认为GET，会被后面...customConfig覆盖\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : '',\r\n      'Content-Type': data ? 'application/json' : '',\r\n    },\r\n    ...customConfig,\r\n  }\r\n  if (config.method.toUpperCase() === 'GET') {\r\n    endpoint += qs.stringify(data ?? {}, { addQueryPrefix: true })\r\n  } else {\r\n    config.body = JSON.stringify(data || {})\r\n  }\r\n  return window.fetch(`${apiUrl}/${endpoint}`, config).then(async (res) => {\r\n    // 状态码为401，则登出，并弹出请重新登录\r\n    if (res.status === 401) {\r\n      await auth.logout()\r\n      window.location.reload()\r\n      return Promise.reject({ message: '请重新登录' })\r\n    }\r\n    const data = await res.json()\r\n    if (res.ok) {\r\n      return data\r\n    } else {\r\n      return Promise.reject(data) //手动抛出异常\r\n    }\r\n  })\r\n}\r\n\r\n// useHttp hook 即上面封装的http方法\r\nexport const useHttp = () => {\r\n  const { user } = useAuth()\r\n\r\n  // utility type 的用法：用泛型给它传入一个其他类型，然后utility type对这个类型进行某种操作\r\n  return useCallback(\r\n    (...[endpoint, config]: Parameters<typeof http>) =>\r\n      http(endpoint, { ...config, token: user?.token }),\r\n    [user?.token]\r\n  )\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\n// 为0的时候不删除\r\n// export const isFalsy = (value: unknown) => (value === 0 ? false : !value)\r\nexport const isVoid = (value: unknown) =>\r\n  value === undefined || value === 0 || value === null || value === ''\r\n// 在一个函数里，改变传入的对象本身是不好的\r\nexport const cleanObject = (object: { [key: string]: unknown }) => {\r\n  // 判断object里的属性是否为空\r\n  const result = { ...object }\r\n  Object.keys(result).forEach((key) => {\r\n    // @ts-ignore\r\n    const value = result[key]\r\n    // 为空则删除\r\n    if (isVoid(value)) {\r\n      delete result[key]\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\nexport const useMount = (callback: () => void) => {\r\n  useEffect(() => {\r\n    callback()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n}\r\n\r\n// 实现延时发请求（设置定时器，下一次变化的时候又清理上一个定时器，一直到连续dalay的时间不发生变化\r\n// 直接实现方法就是把param也就是传入的value 存入到新的状态debouncedValue中，再传回去\r\nexport const useDebounce = <T>(value: T, delay?: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n  useEffect(() => {\r\n    // 每次在value变化以后，设置一个新定时器\r\n    const timeout = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    // return的在上一次useEffect运行完执行，所以发生变化之后开启新的，就把上面的timeout清理了\r\n    return () => clearTimeout(timeout)\r\n  }, [value, delay])\r\n  return debouncedValue\r\n}\r\n\r\n// 改变网页顶部的title的hook\r\nexport const useDocumentTitle = (\r\n  title: string,\r\n  keepOnUnmount: boolean = true\r\n) => {\r\n  // 页面加载时，oldTitle===设置新的之前的title\r\n  const oldTitle = useRef(document.title).current //用useRef()让oldTitle为上一个title\r\n  useEffect(() => {\r\n    document.title = title\r\n  }, [title])\r\n  useEffect(() => {\r\n    // 防止报错  Can't perform a React state update on an unmounted component.\r\n\r\n    // 页面卸载时调用\r\n    return () => {\r\n      // 当keepOnmount为false时，即不保留，卸载时就将title改为之前的title，也就是oldTitle\r\n      if (!keepOnUnmount) {\r\n        document.title = oldTitle\r\n      }\r\n    }\r\n  }, [keepOnUnmount, oldTitle])\r\n}\r\n\r\n// 重置路由状态\r\nexport const resetRoute = () => (window.location.href = window.location.origin)\r\n\r\n/**\r\n * 传入一个对象，和键集合，返回对应的对象中的键值对\r\n  @param obj\r\n  @param keys\r\n */\r\nexport const subset = <\r\n  O extends { [key in string]: unknown },\r\n  K extends keyof O\r\n>(\r\n  obj: O,\r\n  keys: K[]\r\n) => {\r\n  const filteredEntries = Object.entries(obj).filter(([key]) =>\r\n    keys.includes(key as K)\r\n  )\r\n  return Object.fromEntries(filteredEntries) as Pick<O, K>\r\n}\r\n\r\n/**\r\n * 返回组件的挂载状态，如果还没有挂载或者已经卸载，返回false；反之，返回true\r\n */\r\nexport const useMountedRef = () => {\r\n  const mountedRef = useRef(false)\r\n  useEffect(() => {\r\n    mountedRef.current = true\r\n    return () => {\r\n      mountedRef.current = false\r\n    }\r\n  })\r\n  return mountedRef\r\n}\r\n","// 统一处理发起异步请求时loading和error的状态\r\n\r\nimport { useCallback, useReducer, useState } from 'react'\r\nimport { useMountedRef } from 'utils'\r\ninterface State<D> {\r\n  error: Error | null\r\n  data: D | null\r\n  stat: 'idle' | 'loading' | 'error' | 'success'\r\n}\r\n\r\nconst defaultInitialState: State<null> = {\r\n  stat: 'idle',\r\n  data: null,\r\n  error: null,\r\n}\r\n\r\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\r\n  const mountedRef = useMountedRef()\r\n\r\n  return useCallback(\r\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\r\n    [dispatch, mountedRef]\r\n  )\r\n}\r\n\r\nexport const useAsync = <D>(initialState?: State<D>) => {\r\n  const [state, dispatch] = useReducer(\r\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\r\n    {\r\n      ...defaultInitialState,\r\n      ...initialState,\r\n    }\r\n  )\r\n\r\n  //请求成功时 改变状态\r\n\r\n  // 判断组件是否被卸载\r\n  const safeDispatch = useSafeDispatch(dispatch)\r\n  const [retry, setRetry] = useState(() => () => {})\r\n\r\n  // useCallback 让他不再每次创建都创建一个新的\r\n  const setData = useCallback(\r\n    (data: D) =>\r\n      safeDispatch({\r\n        data,\r\n        stat: 'success',\r\n        error: null,\r\n      }),\r\n    [safeDispatch]\r\n  )\r\n\r\n  // 请求失败时 改变状态\r\n  const setError = useCallback(\r\n    (error: Error) => safeDispatch({ error, stat: 'error', data: null }),\r\n    [safeDispatch]\r\n  )\r\n\r\n  //用来触发异步请求，传入的参数的Promise型，useHttp里封装好的fetch方法发起的请求返回的就是promise\r\n  const run = useCallback(\r\n    (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\r\n      if (!promise || !promise.then) {\r\n        throw new Error('请传入 Promise 类型数据')\r\n      }\r\n\r\n      // 保存发起promise请求函数，方便修改了pin之后调用来刷新\r\n      setRetry(() => () => {\r\n        if (runConfig?.retry) run(runConfig?.retry(), runConfig)\r\n      })\r\n\r\n      // 发请求时为loading状态\r\n      /*    \r\n        改成函数用法，不然与下面useCallback套着用的话就无限循环了\r\n        setState({ ...state, stat: 'loading' }) \r\n      */\r\n      //  prevState 此时此刻的state\r\n      safeDispatch({ stat: 'loading' })\r\n      return (\r\n        promise\r\n          // 更新请求成功的数据\r\n          .then((data) => {\r\n            //为true说明组件是被挂载的状态，才能继续更新状态\r\n            setData(data)\r\n            return data\r\n          })\r\n          .catch((error) => {\r\n            // catch会消化异常，如果不主动抛出，外面就接不到异常\r\n            setError(error)\r\n            return Promise.reject(error)\r\n          })\r\n      )\r\n    },\r\n    [setData, setError, safeDispatch]\r\n  )\r\n  return {\r\n    isIdle: state.stat === 'idle',\r\n    isLoading: state.stat === 'loading',\r\n    isError: state.stat === 'error',\r\n    isSuccess: state.stat === 'success',\r\n    run,\r\n    retry,\r\n    setData,\r\n    setError,\r\n    ...state,\r\n  }\r\n}\r\n","import styled from '@emotion/styled'\r\nimport { Button, Spin, Typography } from 'antd'\r\nimport React from 'react'\r\n\r\n// 类型守卫\r\nconst isError = (value: any): value is Error => value?.message\r\nexport const ErrorBox = ({ error }: { error: unknown }) => {\r\n  if (isError(error)) {\r\n    return <Typography.Text type={'danger'}>{error.message}</Typography.Text>\r\n  }\r\n  return null\r\n}\r\n\r\nexport const Row = styled.div<{\r\n  gap?: number | true\r\n  between?: boolean\r\n  marginBottom?: number\r\n}>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${(props) =>\r\n    props.between === true ? 'space-between' : undefined};\r\n  margin-bottom: ${(props) => props.marginBottom + 'rem'};\r\n  > * {\r\n    margin-top: 0 !important;\r\n    margin-bottom: 0 !important;\r\n    margin-right: ${(props) =>\r\n      typeof props.gap === 'number'\r\n        ? props.gap + 'rem'\r\n        : props.gap\r\n        ? '2rem'\r\n        : undefined};\r\n  }\r\n`\r\nconst FullPage = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n// 初始化或加载的时候展示的组件\r\nexport const FullPageLoading = () => {\r\n  return (\r\n    <FullPage>\r\n      <Spin />\r\n    </FullPage>\r\n  )\r\n}\r\n\r\n// 出现错误时展示的组件\r\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => {\r\n  return (\r\n    <FullPage>\r\n      <ErrorBox error={error} />\r\n    </FullPage>\r\n  )\r\n}\r\n\r\nexport const ButtonNopadding = styled(Button)`\r\n  padding: 0;\r\n`\r\nexport const ScreenContiner = styled.div`\r\n  padding: 3.2rem;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n","import React, { ReactNode } from 'react'\r\nimport * as auth from 'auth-provider'\r\nimport { User } from 'types/User'\r\nimport { http } from 'utils/http'\r\nimport { useMount } from 'utils'\r\nimport { useAsync } from 'utils/use-async'\r\nimport { FullPageErrorFallback, FullPageLoading } from 'components/lib'\r\nimport { useQueryClient } from 'react-query'\r\n\r\ninterface AuthForm {\r\n  username: string\r\n  password: string\r\n}\r\n\r\n//初始化User  在localStorage中找token 获取user信息\r\nconst bootstrapUser = async () => {\r\n  let user = null\r\n  // 刷新的时候，如果是登录状态即token存在，则不会被切换会未登录状态\r\n  const token = auth.getToken()\r\n  if (token) {\r\n    const data = await http('me', { token })\r\n    user = data.user\r\n  }\r\n  return user\r\n}\r\n\r\n// 创建一个上下文容器\r\nconst AuthContext = React.createContext<\r\n  | {\r\n      user: User | null\r\n      register: (form: AuthForm) => Promise<void>\r\n      login: (form: AuthForm) => Promise<void>\r\n      logout: () => Promise<void>\r\n    }\r\n  | undefined\r\n>(undefined)\r\nAuthContext.displayName = \"'AuthContext\"\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const {\r\n    data: user,\r\n    error,\r\n    isLoading,\r\n    isIdle,\r\n    isError,\r\n    run,\r\n    setData: setUser,\r\n  } = useAsync<User | null>()\r\n  const queryClient = useQueryClient()\r\n  // 获取localStorage中的user信息，保证刷新的时候不会退出登录\r\n  useMount(() => {\r\n    // 初始化\r\n    run(bootstrapUser())\r\n  })\r\n  // 初始或加载的时候\r\n  if (isIdle || isLoading) {\r\n    return <FullPageLoading />\r\n  }\r\n\r\n  // 依靠注册，登录，登出时，对user的改变，来实现unauthenticated和authenticated组件的切换\r\n  // const [user, setUser] = useState<User | null>(null)\r\n  // 继续完善auth-provider中的login，将其返回的user存入状态中\r\n  const login = (form: AuthForm) => auth.login(form).then(setUser) //(user) => setUser(user)\r\n  // 注册的时候，也将user存入状态\r\n  const register = (form: AuthForm) => auth.register(form).then(setUser)\r\n  //登出的时候，将user设置为空\r\n  const logout = () =>\r\n    auth.logout().then(() => {\r\n      setUser(null)\r\n      queryClient.clear()\r\n    })\r\n\r\n  // 出错时候\r\n  if (isError) {\r\n    // 避免一出错就直接弹回登录界面，而不知道错误信息\r\n    return <FullPageErrorFallback error={error} />\r\n  }\r\n  return (\r\n    // 将封装好的东西作为上下文传递出去\r\n\r\n    <AuthContext.Provider\r\n      children={children}\r\n      value={{ user, login, register, logout }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext)\r\n  if (!context) {\r\n    throw new Error('useAuth必须在AuthProvider中使用')\r\n  }\r\n  return context\r\n}\r\n","import React from 'react'\r\nimport { useAuth } from 'context/auth-context'\r\nimport { Form, Input } from 'antd'\r\nimport { LongButton } from './index'\r\nimport { useAsync } from 'utils/use-async'\r\n\r\nexport const RegisterScreen = ({\r\n  // 接收onError函数\r\n  onError,\r\n}: {\r\n  // 类型\r\n  onError: (error: Error) => void\r\n}) => {\r\n  // 从useAuth hook中获取封装好的register方法\r\n  const { register } = useAuth()\r\n  // 从useAsync hook中获取run方法和isLoading状态\r\n  const { run, isLoading } = useAsync()\r\n  // 获取input框里的用户名和密码，发送POST请求\r\n  const handleSubmit = ({\r\n    cpassword,\r\n    ...values\r\n  }: {\r\n    username: string\r\n    password: string\r\n    cpassword: string\r\n  }) => {\r\n    if (cpassword !== values.password) {\r\n      // 两次输入的密码不相同，设置错误信息，呈现在unAuthenticate页面上\r\n      onError(new Error('请确认两次输入的密码相同'))\r\n      return\r\n    }\r\n    // 使用封装好的run方法，发请求，捕获到错误设置错误信息，呈现在unAuthenticate页面上\r\n    run(register(values)).catch(onError)\r\n\r\n    // register({ username, password })\r\n  }\r\n  return (\r\n    // 提交表单信息\r\n    <Form onFinish={handleSubmit}>\r\n      <Form.Item\r\n        name={'username'}\r\n        rules={[{ required: true, message: '请输入用户名' }]}\r\n      >\r\n        <Input placeholder=\"用户名\" type=\"text\" id={'username'} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={'password'}\r\n        rules={[{ required: true, message: '请输入密码' }]}\r\n      >\r\n        <Input placeholder=\"密码\" type=\"password\" id={'password'} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={'cpassword'}\r\n        rules={[{ required: true, message: '请确认密码' }]}\r\n      >\r\n        <Input placeholder=\"确认密码\" type=\"password\" id={'cpassword'} />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <LongButton loading={isLoading} htmlType=\"submit\" type={'primary'}>\r\n          注册\r\n        </LongButton>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useAuth } from 'context/auth-context'\r\nimport { Form, Input } from 'antd'\r\nimport { LongButton } from './index'\r\nimport { useAsync } from 'utils/use-async'\r\nexport const LoginScreen = ({\r\n  onError,\r\n}: {\r\n  onError: (error: Error) => void\r\n}) => {\r\n  const { login } = useAuth()\r\n  const { run, isLoading } = useAsync()\r\n  // 获取input框里的用户名和密码，发送POST请求\r\n  const handleSubmit = (values: { username: string; password: string }) => {\r\n    run(login(values).catch(onError))\r\n    // register({ username, password })\r\n  }\r\n  return (\r\n    <Form onFinish={handleSubmit}>\r\n      <Form.Item\r\n        name={'username'}\r\n        rules={[{ required: true, message: '请输入用户名' }]}\r\n      >\r\n        <Input placeholder=\"用户名\" type=\"text\" id={'username'} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={'password'}\r\n        rules={[{ required: true, message: '请输入密码' }]}\r\n      >\r\n        <Input placeholder=\"密码\" type=\"password\" id={'password'} />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <LongButton loading={isLoading} htmlType=\"submit\" type={'primary'}>\r\n          登录\r\n        </LongButton>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","import React, { useState } from 'react'\r\nimport { RegisterScreen } from './register'\r\nimport { LoginScreen } from './login'\r\nimport { Button, Card, Divider } from 'antd'\r\nimport styled from '@emotion/styled'\r\nimport logo from 'assets/logo.svg'\r\nimport left from 'assets/left.svg'\r\nimport right from 'assets/right.svg'\r\nimport { useDocumentTitle } from 'utils'\r\nimport { ErrorBox } from 'components/lib'\r\n\r\n// 登录前页面\r\nexport const UnauthenticatedApp = () => {\r\n  const [isRegister, setIsRegister] = useState(false) //呈现登录还是注册页面，默认为false及登录界面\r\n  const [error, setError] = useState<Error | null>(null)\r\n  useDocumentTitle('请登录或注册')\r\n\r\n  return (\r\n    <Container>\r\n      {/* 顶部图 */}\r\n      <Header />\r\n      {/* 背景图 */}\r\n      <Background />\r\n      {/* 登录/注册的那个卡片 */}\r\n      <ShadowCard>\r\n        <Title>{isRegister ? '请注册' : '请登录'}</Title>\r\n        {/* 如果有错误，则呈现错误信息 */}\r\n        <ErrorBox error={error} />\r\n        {/* 根据isRegister来选择呈现登录组件还是注册组件，并把setError函数传递过去 */}\r\n        {isRegister ? (\r\n          <RegisterScreen onError={setError} />\r\n        ) : (\r\n          <LoginScreen onError={setError} />\r\n        )}\r\n        {/* 分割线 */}\r\n        <Divider />\r\n        {/* 点击切换登录/注册组件 */}\r\n        <LongButton\r\n          type={'link'}\r\n          style={{ userSelect: 'none' }}\r\n          onClick={() => {\r\n            setError(null) //切换时清除上面的error信息\r\n            setIsRegister(!isRegister) //改变isRegister 实现组件切换\r\n          }}\r\n        >\r\n          {isRegister ? '已经有账号了？直接登录' : '没有账号？注册新账号'}\r\n        </LongButton>\r\n      </ShadowCard>\r\n    </Container>\r\n  )\r\n}\r\nexport const LongButton = styled(Button)`\r\n  width: 100%;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 2.4rem;\r\n  color: rgb(94, 108, 132);\r\n`\r\n\r\n// 顶部图\r\nconst Header = styled.header`\r\n  background: url(${logo}) no-repeat center;\r\n  padding: 5rem 0;\r\n  background-size: 8rem;\r\n  width: 100%;\r\n`\r\n\r\n//背景图\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-position: left bottom, right bottom;\r\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\r\n    calc(((100vw - 40rem) / 2) - 3.2rem), cover;\r\n  background-image: url(${left}), url(${right});\r\n`\r\n\r\nconst ShadowCard = styled(Card)`\r\n  width: 40rem;\r\n  min-height: 56rem;\r\n  padding: 3.2rem;\r\n  border-radius: 0.3rem;\r\n  box-sizing: border-box;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`\r\n","// 封装收藏组件\r\nimport React from 'react'\r\nimport { Rate } from 'antd'\r\n\r\ninterface PinProps extends React.ComponentProps<typeof Rate> {\r\n  checked: boolean\r\n  onCheckedChange?: (checked: boolean) => void\r\n}\r\n\r\nexport const Pin = (props: PinProps) => {\r\n  const { checked, onCheckedChange, ...restProps } = props\r\n  return (\r\n    <Rate\r\n      count={1}\r\n      value={checked ? 1 : 0}\r\n      onChange={(num) => {\r\n        // console.log(!!num)\r\n        onCheckedChange?.(!!num)\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","/**\n * 在本地对排序进行乐观更新\n * @param fromId 要排序的项目的id\n * @param type 'before' | 'after'\n * @param referenceId 参照id\n * @param list 要排序的列表, 比如tasks, kanbans\n */\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[]\n  fromId: number\n  type: 'after' | 'before'\n  referenceId: number\n}) => {\n  const copiedList = [...list]\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId)\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1)\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId)\n  const insert = type === 'after' ? insertAfter : insertBefore\n  return insert([...copiedList], movingItemIndex, targetIndex)\n}\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to]\n  const removedItem = list.splice(from, 1)[0]\n  const toIndex = list.indexOf(toItem)\n  list.splice(toIndex, 0, removedItem)\n  return list\n}\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to]\n  const removedItem = list.splice(from, 1)[0]\n  const toIndex = list.indexOf(toItem)\n  list.splice(toIndex + 1, 0, removedItem)\n  return list\n}\n","import { QueryKey, useQueryClient } from 'react-query'\r\nimport { Task } from 'types/task'\r\nimport { reorder } from './reorder'\r\n\r\n// 封装用来生成获取数据的config\r\nexport const useConfig = (\r\n  queryKey: QueryKey,\r\n  callback: (target: any, old?: any[]) => any[]\r\n) => {\r\n  const queryClient = useQueryClient()\r\n  return {\r\n    onSuccess: () => queryClient.invalidateQueries(queryKey), //成功后刷新\r\n    // onSuccess: () => console.log('111'), //成功后刷新\r\n\r\n    async onMutate(target: any) {\r\n      const previousItems = queryClient.getQueryData(queryKey)\r\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\r\n        return callback(target, old)\r\n      }) //在缓存里刷新数据，达到在请求回来前刷新ui的作用\r\n      return { previousItems } //这个是回滚时候用的，放在context里面\r\n    },\r\n    // 操作不成功，会滚，把之前擅自改变的ui改回来\r\n    onError(error: any, newItem: any, context: any) {\r\n      queryClient.setQueryData(queryKey, context.previousItems)\r\n    },\r\n  }\r\n}\r\n\r\n// 细分\r\nexport const useDeleteConfig = (queryKey: QueryKey) =>\r\n  useConfig(\r\n    queryKey,\r\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\r\n  )\r\nexport const useAddConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : target))\r\nexport const useEditConfig = (queryKey: QueryKey) =>\r\n  useConfig(\r\n    queryKey,\r\n    (target, old) =>\r\n      old?.map((item) =>\r\n        item.id === target.id ? { ...item, ...target } : item\r\n      ) || []\r\n  )\r\nexport const useReorderKanbanConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => reorder({ list: old, ...target }))\r\n\r\nexport const useReorderConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => old || [])\r\n\r\nexport const useReorderTaskConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => {\r\n    // 乐观更新task序列中的位置\r\n    const orderdList = reorder({ list: old, ...target }) as Task[]\r\n    return orderdList.map((item) =>\r\n      item.id === target.fromId\r\n        ? { ...item, kanbanId: target.toKanbanId }\r\n        : item\r\n    )\r\n  })\r\n","// 发project请求的hook\r\n// import { useCallback, useEffect } from 'react'\r\nimport { QueryKey, useMutation, useQuery } from 'react-query'\r\nimport { Project } from 'types/project'\r\n// import { cleanObject } from 'utils'\r\nimport { useHttp } from './http'\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useEditConfig,\r\n} from './use-optimistic-options'\r\n\r\n// 传入的是search-panel里input框和select框里的信息(name和personId)\r\nexport const useProjects = (param?: Partial<Project>) => {\r\n  const client = useHttp() //封装好的发fetch方法\r\n\r\n  // 名为projects，param变化的时候自动请求，请求的方法\r\n  return useQuery<Project[]>(['projects', param], () =>\r\n    client('projects', { data: param })\r\n  )\r\n}\r\n// 发送请求，修改收藏\r\n\r\n// 实现乐观更新 optimistic update\r\nexport const useEditProject = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    (params: Partial<Project>) =>\r\n      client(`projects/${params.id}`, {\r\n        method: 'PATCH',\r\n        data: params,\r\n      }),\r\n    useEditConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport const useAddProject = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    (params: Partial<Project>) =>\r\n      client(`projects`, {\r\n        method: 'POST',\r\n        data: params,\r\n      }),\r\n    useAddConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport const useDeleteProject = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`projects/${id}`, {\r\n        method: 'DELETE',\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport const useProject = (id?: number) => {\r\n  const client = useHttp()\r\n  return useQuery<Project>(\r\n    ['project', { id }],\r\n    () => client(`projects/${id}`),\r\n    {\r\n      enabled: !!id, //id有值的时候才触发这个操作\r\n    }\r\n  )\r\n}\r\n","import { useMemo } from 'react'\r\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom'\r\nimport { cleanObject } from 'utils'\r\n\r\n/* \r\n  返回页面url中，指定键的参数值\r\n*/\r\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  return [\r\n    // 只有searchParams变化的时候才执行，不用useMemo的话，每次渲染都会创建一个新的对象，然后一直渲染\r\n    useMemo(() => {\r\n      return keys.reduce((prev, key) => {\r\n        return { ...prev, [key]: searchParams.get(key) || '' }\r\n      }, {} as { [key in K]: string })\r\n      //eslint-disable-next-line\r\n    }, [searchParams]),\r\n\r\n    // 限定setSearchParams 的参数类型\r\n    (params: Partial<{ [key in K]: unknown }>) => {\r\n      const o = cleanObject({\r\n        // 读取searchParam 转化为对象\r\n        ...Object.fromEntries(searchParams),\r\n        ...params,\r\n      }) as URLSearchParamsInit\r\n\r\n      // console.log(o)\r\n\r\n      return setSearchParams(o)\r\n    },\r\n  ] as const\r\n  // 把类型变为字面量\r\n}\r\n\r\nexport const useSetUrlSearchParam = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  return (params: { [key in string]: unknown }) => {\r\n    const o = cleanObject({\r\n      ...Object.fromEntries(searchParams),\r\n      ...params,\r\n    }) as URLSearchParamsInit\r\n    return setSearchParams(o)\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useProject } from 'utils/project'\r\nimport { useUrlQueryParam } from 'utils/url'\r\n\r\n// 项目列表默认的参数\r\nexport const useProjectSearchParams = () => {\r\n  // 基本类型可以放到依赖里，组件状态可以放到依赖里，非组件状态的对象绝不可以放到依赖里\r\n  // 将keys设置为状态传入，不然每次渲染，keys都会重建，然后那边又在检测keys，就会无限渲染\r\n  // const [keys] = useState<('name' | 'personId')[]>(['name', 'personId'])\r\n  const [param, setParam] = useUrlQueryParam(['name', 'personId'])\r\n\r\n  return [\r\n    // 使用useMemo，避免每次创建一个新对象而无限渲染\r\n    useMemo(() => {\r\n      return { ...param, personId: Number(param.personId) || undefined }\r\n    }, [param]),\r\n    setParam,\r\n  ] as const\r\n}\r\n\r\nexport const useProjectsQueryKey = () => {\r\n  const [params] = useProjectSearchParams()\r\n  return ['projects', params]\r\n}\r\n\r\n// 全局的状态管理器\r\nexport const useProjectModal = () => {\r\n  // 读取url里对应的参数\r\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\r\n    'projectCreate',\r\n  ])\r\n\r\n  const [{ projectIdEdit }, setProjectIdEdit] = useUrlQueryParam([\r\n    'projectIdEdit',\r\n  ])\r\n  const { data: projectEdit, isLoading } = useProject(Number(projectIdEdit))\r\n\r\n  const open = () => setProjectCreate({ projectCreate: true })\r\n  const close = () => {\r\n    /* \r\n    这里不知道为啥子只能执行一个一个函数（后面个）所以用了三位运算符\r\n      setProjectIdEdit({ projectIdEdit: undefined })\r\n      setProjectCreate({ projectCreate: undefined })\r\n     */\r\n\r\n    projectIdEdit\r\n      ? setProjectIdEdit({ projectIdEdit: undefined })\r\n      : setProjectCreate({ projectCreate: undefined })\r\n  } //这样就不会在url里显示出来\r\n  const startEdit = (id: number) => setProjectIdEdit({ projectIdEdit: id })\r\n\r\n  return {\r\n    projectModalOpen: projectCreate === 'true' || Boolean(projectIdEdit), //modal是否打开的标识值\r\n    open,\r\n    close,\r\n    startEdit,\r\n    projectEdit,\r\n    isLoading,\r\n  }\r\n}\r\n","import { Dropdown, Menu, Modal, Table, TableProps } from 'antd'\r\nimport { ButtonNopadding } from 'components/lib'\r\nimport { Pin } from 'components/pin'\r\nimport dayjs from 'dayjs'\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDeleteProject, useEditProject } from 'utils/project'\r\nimport { User } from '../../types/User'\r\nimport { useProjectModal, useProjectsQueryKey } from './util'\r\nimport { Project } from 'types/project'\r\n\r\ninterface ListProps extends TableProps<Project> {\r\n  users: User[]\r\n  refresh?: () => void\r\n}\r\n\r\n// props 接收TableProps属性\r\n\r\n// 接受index传过来的数据，渲染页面\r\nexport const List = ({ users, ...props }: ListProps) => {\r\n  const { mutate } = useEditProject(useProjectsQueryKey())\r\n  const pinProject = (id: number) => (pin: boolean) => {\r\n    return mutate({ id, pin })\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      pagination={false}\r\n      rowKey={(project) => project.id}\r\n      columns={[\r\n        {\r\n          title: <Pin checked={true} disabled={true} />,\r\n          render(value, project) {\r\n            // if (project.id === 3) console.log(project.pin)\r\n\r\n            return (\r\n              <Pin\r\n                checked={project.pin}\r\n                onCheckedChange={pinProject(project.id)}\r\n              />\r\n            )\r\n          },\r\n        },\r\n        {\r\n          title: '名称',\r\n          sorter: (a, b) => a.name.localeCompare(b.name),\r\n          render(value, project) {\r\n            return <Link to={String(project.id)}>{project.name}</Link>\r\n          },\r\n        },\r\n        {\r\n          title: '部门',\r\n          dataIndex: 'organization',\r\n\r\n          sorter: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n        {\r\n          title: '负责人',\r\n          render(value, project) {\r\n            return (\r\n              <span>\r\n                {users.find((user) => user.id === project.personId)?.name ||\r\n                  '未知'}\r\n              </span>\r\n            )\r\n          },\r\n        },\r\n        {\r\n          title: '创建时间',\r\n          render(value, project) {\r\n            return (\r\n              <span>\r\n                {project.created\r\n                  ? dayjs(project.created).format('YYYY-MM-DD')\r\n                  : null}\r\n              </span>\r\n            )\r\n          },\r\n        },\r\n        {\r\n          render(value, project) {\r\n            return <More project={project}></More>\r\n          },\r\n        },\r\n      ]}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst More = ({ project }: { project: Project }) => {\r\n  const { startEdit } = useProjectModal()\r\n  const editProject = (id: number) => () => {\r\n    return startEdit(id)\r\n  }\r\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey())\r\n  const confirmDeleteProject = (id: number) => {\r\n    Modal.confirm({\r\n      title: '确定删除这个项目吗？',\r\n      content: '点击确定删除',\r\n      okText: '确定',\r\n      onOk() {\r\n        deleteProject({ id })\r\n      },\r\n    })\r\n  }\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <Menu>\r\n          <Menu.Item onClick={editProject(project.id)} key={'edit'}>\r\n            编辑\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            onClick={() => confirmDeleteProject(project.id)}\r\n            key={'delete'}\r\n          >\r\n            删除\r\n          </Menu.Item>\r\n        </Menu>\r\n      }\r\n    >\r\n      <ButtonNopadding type={'link'}>...</ButtonNopadding>\r\n    </Dropdown>\r\n  )\r\n}\r\n","import { useQuery } from 'react-query'\r\nimport { User } from 'types/User'\r\nimport { useHttp } from './http'\r\n\r\n// 发user请求的hook\r\nexport const useUsers = (param?: Partial<User>) => {\r\n  const client = useHttp() //封装好的发fetch方法\r\n\r\n  // 名为users，param变化的时候自动请求，请求的方法\r\n  return useQuery<User[]>(['users', param], () =>\r\n    client('users', { data: param })\r\n  )\r\n}\r\n","// 解决id类型\r\n\r\nimport { Select } from 'antd'\r\nimport React from 'react'\r\nimport { Raw } from 'types'\r\n\r\ntype SelectProps = React.ComponentProps<typeof Select>\r\n\r\ninterface IdSelectProps\r\n  extends Omit<SelectProps, 'value' | 'onChange' | 'options'> {\r\n  value?: Raw | null | undefined\r\n  onChange?: (value?: number) => void\r\n  defaultOptionName?: string\r\n  options?: { name: string; id: number }[]\r\n}\r\n/* \r\n  value 可以传入多种类型的值\r\n  onchange 只会回调number|undefined 类型\r\n  当isNaN(Number(value)) 为true 的时候，代表选择默认类型\r\n  当选择默认类型的时候，onChange会回调undefined\r\n\r\n*/\r\nexport const IdSelect = (props: IdSelectProps) => {\r\n  const { value, onChange, defaultOptionName, options, ...restProps } = props\r\n  return (\r\n    <Select\r\n      // 这里判断options是否被返回，如果还没被返回就让value为0，让他显示成负责人的状态\r\n      value={options?.length ? toNumber(value) : 0}\r\n      onChange={(value) => onChange?.(toNumber(value))}\r\n      {...restProps}\r\n    >\r\n      {defaultOptionName ? (\r\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\r\n      ) : null}\r\n      {options?.map((option) => (\r\n        <Select.Option key={option.id} value={option.id}>\r\n          {option.name}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  )\r\n}\r\n\r\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value))\r\n","// 封装select组件\r\n\r\nimport React from 'react'\r\nimport { useUsers } from 'utils/user'\r\nimport { IdSelect } from './id-select'\r\n\r\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\r\n  const { data: users } = useUsers()\r\n  return <IdSelect options={users || []} {...props}></IdSelect>\r\n}\r\n","// eslint-disable-next-line\r\nimport { jsx } from '@emotion/react'\r\nimport React from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport { Project } from '../../types/project'\r\nimport { UserSelect } from 'components/user-select'\r\nimport { User } from '../../types/User'\r\ninterface SearchPanelProps {\r\n  users: User[]\r\n  param: Partial<Pick<Project, 'name' | 'personId'>>\r\n\r\n  setParam: (param: SearchPanelProps['param']) => void\r\n}\r\n\r\n// 因为状态上升，所以param setParam 和 users都在index里面\r\nexport const SearchPanel = ({ param, setParam, users }: SearchPanelProps) => {\r\n  return (\r\n    //emotion的行内样式 要指定编译器，引入emotion/react\r\n    <Form style={{ marginBottom: '2rem' }} layout={'inline'}>\r\n      <Form.Item>\r\n        {/* setParam(Object.assign({},param,{name:evt.target.name})) */}\r\n        {/* 在input框中输入，或在select中选择，更新param中的属性，\r\n        index那边监测到param变化，发起fetch请求， 接收到数据更新list并渲染到list组件中 */}\r\n        <Input\r\n          placeholder=\"项目名\"\r\n          type=\"text\"\r\n          value={param.name}\r\n          // 根据输入，改变 name\r\n          onChange={(evt) =>\r\n            setParam({\r\n              ...param,\r\n              name: evt.target.value,\r\n            })\r\n          }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <UserSelect\r\n          value={param.personId}\r\n          defaultOptionName={'负责人'}\r\n          onChange={(value) =>\r\n            // 根据选择，改变param的id\r\n            setParam({\r\n              ...param,\r\n              personId: value,\r\n            })\r\n          }\r\n        ></UserSelect>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\n// import qs from 'qs'\r\n\r\nimport { List } from './list'\r\nimport { SearchPanel } from './search-panel'\r\nimport { useDebounce, useDocumentTitle } from 'utils'\r\nimport styled from '@emotion/styled'\r\nimport { useProjects } from 'utils/project'\r\nimport { useUsers } from 'utils/user'\r\nimport { useProjectModal, useProjectSearchParams } from './util'\r\nimport { ButtonNopadding, ErrorBox, Row } from 'components/lib'\r\n\r\n// console.log(process.env.REACT_APP_API_URL)\r\n\r\n// 登录后显示具体信息的组件,被渲染进authenticated-app\r\nexport const ProjectList = () => {\r\n  useDocumentTitle('项目列表', false)\r\n\r\n  const [param, setParam] = useProjectSearchParams()\r\n  // console.log(param)\r\n\r\n  // param 发生变化的时候发起fetch请求\r\n  // 请求成功后 将请求的数据存入list\r\n\r\n  // 从 useProject 中获取isLoading（用来关联页面加载时显示的变化的属性） error（出错时显示错误信息） data（传给List组件渲染页面）\r\n  const { isLoading, error, data: list } = useProjects(useDebounce(param, 200))\r\n\r\n  // 此处的user不是登录时的那个用户，是与项目相关的那些人\r\n  const { data: users } = useUsers()\r\n\r\n  const { open } = useProjectModal()\r\n  return (\r\n    <Container>\r\n      <Row between={true}>\r\n        <h1>项目列表</h1>\r\n        <ButtonNopadding onClick={open} type={'link'}>\r\n          创建项目\r\n        </ButtonNopadding>\r\n      </Row>\r\n      <SearchPanel param={param} setParam={setParam} users={users || []} />\r\n      {/* 出错时显示错误信息 */}\r\n      <ErrorBox error={error} />\r\n      {/* list 送给表单去渲染 */}\r\n      <List loading={isLoading} dataSource={list || []} users={users || []} />\r\n    </Container>\r\n  )\r\n}\r\n// 检查这个组件无限渲染的问题,false为关闭\r\nProjectList.whyDidYouRender = false\r\n\r\nconst Container = styled.div`\r\n  padding: 3.2rem;\r\n`\r\n","var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSoftwareLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 179 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    className: \"css-sq9aeg-Logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"97.6553341%\",\n    y1: \"35.6591143%\",\n    x2: \"37.202032%\",\n    y2: \"75.4891864%\",\n    id: \"uid392-1\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"7%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"8.43371138%\",\n    y1: \"60.1495759%\",\n    x2: \"64.1161517%\",\n    y2: \"23.5790285%\",\n    id: \"uid392-2\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"0%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"none\",\n    strokeWidth: 1,\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,27.9242105 C12.4881804,26.8071817 13.1062496,25.2917664 13.1062496,23.7115789 C13.1062496,22.1313915 12.4881804,20.6159762 11.3881081,19.4989474 L11.3881081,19.4989474 L3.74837838,11.7621053 L0.273513514,15.2926316 C-0.0900771727,15.6625064 -0.0900771727,16.2617042 0.273513514,16.6315789 L11.3881081,27.9242105 L11.3881081,27.9242105 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5027027,15.2926316 L11.3881081,4 L11.3881081,4 L11.3539189,4.03473684 L11.3539189,4.03473684 C9.08852466,6.36456187 9.09963243,10.1156459 11.3787838,12.4315789 L19.0247297,20.1652632 L22.5027027,16.6315789 C22.8662934,16.2617042 22.8662934,15.6625064 22.5027027,15.2926316 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,12.4252632 C9.10895676,10.1093301 9.09784899,6.35824608 11.3632432,4.02842105 L3.43445946,12.0810526 L7.58067568,16.2936842 L11.3881081,12.4252632 Z\",\n    fill: \"url(#uid392-1)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.1893243,15.6368421 L11.3881081,19.4989474 C12.4881804,20.6159762 13.1062496,22.1313915 13.1062496,23.7115789 C13.1062496,25.2917664 12.4881804,26.8071817 11.3881081,27.9242105 L19.3355405,19.8494737 L15.1893243,15.6368421 Z\",\n    fill: \"url(#uid392-2)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.07,18.956 C36.07,20.646 35.394,21.842 33.418,21.842 C32.56,21.842 31.702,21.686 31,21.4 L31,23.662 C31.65,23.896 32.586,24.104 33.808,24.104 C37.032,24.104 38.41,21.946 38.41,18.8 L38.41,6.918 L36.07,6.918 L36.07,18.956 Z M41.894,7.568 C41.894,8.556 42.544,9.128 43.454,9.128 C44.364,9.128 45.014,8.556 45.014,7.568 C45.014,6.58 44.364,6.008 43.454,6.008 C42.544,6.008 41.894,6.58 41.894,7.568 Z M42.31,24 L44.546,24 L44.546,11 L42.31,11 L42.31,24 Z M47.926,24 L50.11,24 L50.11,16.33 C50.11,13.574 51.852,12.716 54.712,13.002 L54.712,10.818 C52.164,10.662 50.864,11.754 50.11,13.288 L50.11,11 L47.926,11 L47.926,24 Z M65.45,24 L65.45,21.66 C64.618,23.376 63.058,24.26 61.056,24.26 C57.598,24.26 55.856,21.322 55.856,17.5 C55.856,13.834 57.676,10.74 61.316,10.74 C63.214,10.74 64.67,11.598 65.45,13.288 L65.45,11 L67.686,11 L67.686,24 L65.45,24 Z M58.092,17.5 C58.092,20.62 59.34,22.18 61.654,22.18 C63.656,22.18 65.45,20.906 65.45,18.02 L65.45,16.98 C65.45,14.094 63.812,12.82 61.914,12.82 C59.392,12.82 58.092,14.484 58.092,17.5 Z M86.926,19.294 C86.926,16.226 84.898,15.056 81.284,14.146 C78.268,13.392 77.176,12.69 77.176,11.286 C77.176,9.726 78.502,8.946 80.738,8.946 C82.506,8.946 84.352,9.258 86.068,10.246 L86.068,7.906 C84.898,7.256 83.312,6.658 80.842,6.658 C76.864,6.658 74.836,8.634 74.836,11.286 C74.836,14.094 76.552,15.42 80.4,16.356 C83.65,17.136 84.586,17.942 84.586,19.45 C84.586,20.958 83.624,21.972 81.05,21.972 C78.788,21.972 76.344,21.374 74.758,20.542 L74.758,22.934 C76.084,23.61 77.618,24.26 80.92,24.26 C85.158,24.26 86.926,22.258 86.926,19.294 Z M95.09,24.26 C91.19,24.26 88.902,21.374 88.902,17.474 C88.902,13.574 91.19,10.74 95.09,10.74 C98.964,10.74 101.226,13.574 101.226,17.474 C101.226,21.374 98.964,24.26 95.09,24.26 Z M95.09,12.82 C92.308,12.82 91.086,15.004 91.086,17.474 C91.086,19.944 92.308,22.18 95.09,22.18 C97.846,22.18 99.042,19.944 99.042,17.474 C99.042,15.004 97.846,12.82 95.09,12.82 Z M106.92,9.622 C106.92,8.452 107.596,7.646 108.974,7.646 C109.494,7.646 109.988,7.698 110.378,7.776 L110.378,5.722 C109.988,5.618 109.546,5.514 108.87,5.514 C106.088,5.514 104.736,7.152 104.736,9.57 L104.736,11 L102.63,11 L102.63,13.08 L104.736,13.08 L104.736,24 L106.92,24 L106.92,13.08 L110.274,13.08 L110.274,11 L106.92,11 L106.92,9.622 Z M115.786,19.892 L115.786,13.08 L119.244,13.08 L119.244,11 L115.786,11 L115.786,8.244 L113.602,8.244 L113.602,11 L111.496,11 L111.496,13.08 L113.602,13.08 L113.602,19.944 C113.602,22.362 114.954,24 117.736,24 C118.412,24 118.854,23.896 119.244,23.792 L119.244,21.634 C118.854,21.712 118.36,21.816 117.84,21.816 C116.462,21.816 115.786,21.036 115.786,19.892 Z M125.432,24 L128.292,24 L130.528,17.708 L131.724,13.704 L132.92,17.708 L135.156,24 L138.016,24 L142.8,11 L140.33,11 L136.586,22.024 L132.79,11 L130.658,11 L126.862,22.024 L123.118,11 L120.648,11 L125.432,24 Z M153.538,24 L153.538,21.66 C152.706,23.376 151.146,24.26 149.144,24.26 C145.686,24.26 143.944,21.322 143.944,17.5 C143.944,13.834 145.764,10.74 149.404,10.74 C151.302,10.74 152.758,11.598 153.538,13.288 L153.538,11 L155.774,11 L155.774,24 L153.538,24 Z M146.18,17.5 C146.18,20.62 147.428,22.18 149.742,22.18 C151.744,22.18 153.538,20.906 153.538,18.02 L153.538,16.98 C153.538,14.094 151.9,12.82 150.002,12.82 C147.48,12.82 146.18,14.484 146.18,17.5 Z M159.154,24 L161.338,24 L161.338,16.33 C161.338,13.574 163.08,12.716 165.94,13.002 L165.94,10.818 C163.392,10.662 162.092,11.754 161.338,13.288 L161.338,11 L159.154,11 L159.154,24 Z M178.108,23.48 C177.042,24.052 175.404,24.26 174.078,24.26 C169.216,24.26 167.084,21.452 167.084,17.474 C167.084,13.548 169.268,10.74 173.22,10.74 C177.224,10.74 178.836,13.522 178.836,17.474 L178.836,18.488 L169.346,18.488 C169.658,20.698 171.088,22.128 174.156,22.128 C175.664,22.128 176.938,21.842 178.108,21.426 L178.108,23.48 Z M173.116,12.768 C170.75,12.768 169.554,14.302 169.32,16.564 L176.574,16.564 C176.444,14.146 175.352,12.768 173.116,12.768 Z\",\n    fill: \"inherit\",\n    fillRule: \"evenodd\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoftwareLogo);\nexport default __webpack_public_path__ + \"static/media/software-logo.ec204298.svg\";\nexport { ForwardRef as ReactComponent };","// 发请求task数据请求的hook\r\nimport { QueryKey, useMutation, useQuery } from 'react-query'\r\nimport { Task } from 'types/task'\r\nimport { useHttp } from './http'\r\nimport { SortProps } from './kanban'\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useEditConfig,\r\n  useReorderTaskConfig,\r\n} from './use-optimistic-options'\r\n\r\nexport const useTasks = (param?: Partial<Task>) => {\r\n  const client = useHttp() //封装好的发fetch方法\r\n\r\n  // 名为tasks，param变化的时候自动请求，请求的方法\r\n  // uerQuery 一定时间内，重复请求，会拦截其他的节省资源\r\n  return useQuery<Task[]>(['tasks', param], () =>\r\n    client('tasks', { data: param })\r\n  )\r\n}\r\n\r\nexport const useAddTask = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    (params: Partial<Task>) =>\r\n      client(`tasks`, {\r\n        method: 'POST',\r\n        data: params,\r\n      }),\r\n    useAddConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport const useTask = (id?: number) => {\r\n  const client = useHttp()\r\n  return useQuery<Task>(['task', { id }], () => client(`tasks/${id}`), {\r\n    enabled: !!id, //id有值的时候才触发这个操作\r\n  })\r\n}\r\n\r\nexport const useEditTask = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    (params: Partial<Task>) =>\r\n      client(`tasks/${params.id}`, {\r\n        method: 'PATCH',\r\n        data: params,\r\n      }),\r\n    useEditConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport const useDeleteTask = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`tasks/${id}`, {\r\n        method: 'DELETE',\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  )\r\n}\r\n\r\n// task重排序\r\nexport const useReorderTask = (querykey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation((params: SortProps) => {\r\n    return client('tasks/reorder', {\r\n      data: params,\r\n      method: 'POST',\r\n    })\r\n  }, useReorderTaskConfig(querykey))\r\n}\r\n","import { useCallback, useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useProject } from 'utils/project'\r\nimport { useTask, useTasks } from 'utils/task'\r\nimport { useUrlQueryParam } from 'utils/url'\r\nexport const useProjectIdInUrl = () => {\r\n  const { pathname } = useLocation()\r\n  /*  \r\n  var pathname = 'www.google.com/projects/123'\r\n  pathname.match(/projects\\/(\\d+)/)?.[1]\r\n  ['projects/123','123',……] \r\n*/\r\n\r\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1]\r\n  return Number(id)\r\n}\r\n\r\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl())\r\n\r\nexport const useKanbanSearchParams = () => ({ projectId: useProjectIdInUrl() })\r\nexport const useKanbansQueryKey = () => ['kanbans', useKanbanSearchParams()]\r\n\r\nexport const useTasksSearchParams = () => {\r\n  const [param] = useUrlQueryParam(['name', 'typeId', 'processorId', 'tagId'])\r\n  const projectId = useProjectIdInUrl()\r\n  return useMemo(\r\n    () => ({\r\n      projectId,\r\n      typeId: Number(param.typeId) || undefined,\r\n      processorId: Number(param.processorId) || undefined,\r\n      tagId: Number(param.tagId) || undefined,\r\n      name: param.name,\r\n    }),\r\n    [projectId, param]\r\n  )\r\n}\r\nexport const useTasksQueryKey = () => ['tasks', useTasksSearchParams()]\r\nexport const useTasksInProject = () => useTasks(useTasksSearchParams())\r\n\r\nexport const useTasksModal = () => {\r\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\r\n    'editingTaskId',\r\n  ])\r\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId))\r\n  const startEdit = useCallback(\r\n    (id: number) => {\r\n      setEditingTaskId({ editingTaskId: id })\r\n    },\r\n    [setEditingTaskId]\r\n  )\r\n  const close = useCallback(() => {\r\n    setEditingTaskId({ editingTaskId: '' })\r\n  }, [setEditingTaskId])\r\n  return { editingTaskId, startEdit, close, isLoading, editingTask }\r\n}\r\n","import styled from '@emotion/styled'\r\nimport { Button, Drawer, Form, Input, Spin } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport { ErrorBox } from 'components/lib'\r\nimport { UserSelect } from 'components/user-select'\r\nimport React, { useEffect } from 'react'\r\nimport { useAddProject, useEditProject } from 'utils/project'\r\nimport { useProjectModal, useProjectsQueryKey } from './util'\r\n\r\nexport const ProjectModel = () => {\r\n  const { projectModalOpen, close, projectEdit, isLoading } = useProjectModal()\r\n  const title = projectEdit ? '编辑项目' : '创建项目'\r\n\r\n  const useMutateProject = projectEdit ? useEditProject : useAddProject\r\n\r\n  const {\r\n    mutateAsync,\r\n    error,\r\n    isLoading: mutateLoading,\r\n  } = useMutateProject(useProjectsQueryKey())\r\n  const [form] = useForm()\r\n  const onFinish = (values: any) => {\r\n    mutateAsync({ ...projectEdit, ...values }).then(() => {\r\n      form.resetFields() //清空输入框\r\n      close()\r\n    })\r\n  }\r\n\r\n  const closeModal = () => {\r\n    form.resetFields()\r\n\r\n    close()\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(projectEdit)\r\n  }, [form, projectEdit])\r\n  return (\r\n    <Drawer\r\n      forceRender={true}\r\n      width=\"100%\"\r\n      onClose={closeModal}\r\n      visible={projectModalOpen}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={'large'} />\r\n        ) : (\r\n          <>\r\n            <h1>{title}</h1>\r\n            <ErrorBox error={error} />\r\n            <Form\r\n              form={form}\r\n              layout={'vertical'}\r\n              style={{ width: '40rem' }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={'名称'}\r\n                name={'name'}\r\n                rules={[{ required: true, message: '请输入项目名' }]}\r\n              >\r\n                <Input placeholder=\"请输入项目名称\"></Input>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label={'部门'}\r\n                name={'organization'}\r\n                rules={[{ required: true, message: '请输入部门名' }]}\r\n              >\r\n                <Input placeholder=\"请输入部门名称\"></Input>\r\n              </Form.Item>\r\n              <Form.Item label={'负责人'} name={'personId'}>\r\n                <UserSelect defaultOptionName={'负责人'} />\r\n              </Form.Item>\r\n              <Form.Item style={{ textAlign: 'center' }}>\r\n                <Button\r\n                  loading={mutateLoading}\r\n                  type={'primary'}\r\n                  htmlType={'submit'}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport const Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\n","import { useProjectIdInUrl } from 'screens/Kanban/util'\r\n\r\nexport const useEpicSearchParams = () => ({ projectId: useProjectIdInUrl() })\r\nexport const useEpicsQueryKey = () => ['epics', useEpicSearchParams()]\r\n","import { Button, Drawer, DrawerProps, Form, Input, Spin } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport { ErrorBox } from 'components/lib'\r\nimport React, { useEffect } from 'react'\r\nimport { useProjectIdInUrl } from 'screens/Kanban/util'\r\nimport { Container } from 'screens/project-list/project-model'\r\nimport { useAddepic } from 'utils/epic'\r\nimport { useEpicsQueryKey } from './util'\r\n\r\nexport const CreateEpic = (\r\n  props: Pick<DrawerProps, 'visible'> & { onClose: () => void }\r\n) => {\r\n  const { mutate: addEpic, isLoading, error } = useAddepic(useEpicsQueryKey())\r\n  const [form] = useForm()\r\n  const projectId = useProjectIdInUrl()\r\n  const onFinish = async (values: any) => {\r\n    await addEpic({ ...values, projectId })\r\n    props.onClose()\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [form, props.visible])\r\n  return (\r\n    <Drawer\r\n      visible={props.visible}\r\n      onClose={props.onClose}\r\n      forceRender={true}\r\n      destroyOnClose={true}\r\n      width={'100%'}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={'large'} />\r\n        ) : (\r\n          <>\r\n            <h1>创建任务组</h1>\r\n            <ErrorBox error={error} />\r\n            <Form\r\n              form={form}\r\n              layout={'vertical'}\r\n              style={{ width: '40rem' }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={'名称'}\r\n                name={'name'}\r\n                rules={[{ required: true, message: '请输入任务组名' }]}\r\n              >\r\n                <Input placeholder=\"请输入任务组名称\"></Input>\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: 'center' }}>\r\n                <Button\r\n                  loading={isLoading}\r\n                  type={'primary'}\r\n                  htmlType={'submit'}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  )\r\n}\r\n","// 发请求epic数据请求的hook\r\nimport { QueryKey, useMutation, useQuery } from 'react-query'\r\nimport { Epic } from 'types/epic'\r\nimport { useHttp } from './http'\r\nimport { useAddConfig, useDeleteConfig } from './use-optimistic-options'\r\n\r\n// 传入的是search-panel里input框和select框里的信息(name和personId)\r\nexport const useEpics = (param?: Partial<Epic>) => {\r\n  const client = useHttp() //封装好的发fetch方法\r\n\r\n  // 名为epics，param变化的时候自动请求，请求的方法\r\n  return useQuery<Epic[]>(['epics', param], () =>\r\n    client('epics', { data: param })\r\n  )\r\n}\r\n\r\nexport const useAddepic = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    (params: Partial<Epic>) =>\r\n      client(`epics`, {\r\n        method: 'POST',\r\n        data: params,\r\n      }),\r\n    useAddConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport const useDeleteEpic = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`epics/${id}`, {\r\n        method: 'DELETE',\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  )\r\n}\r\n","import { Button, List } from 'antd'\r\nimport { Row, ScreenContiner } from 'components/lib'\r\nimport dayjs from 'dayjs'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useProjectInUrl } from 'screens/Kanban/util'\r\nimport { useDeleteEpic, useEpics } from 'utils/epic'\r\nimport { useTasks } from 'utils/task'\r\nimport { CreateEpic } from './create-epic'\r\nimport { useEpicSearchParams, useEpicsQueryKey } from './util'\r\n\r\nexport const Epic = () => {\r\n  const { data: currentProject } = useProjectInUrl()\r\n  const { data: epics } = useEpics(useEpicSearchParams())\r\n  const { data: tasks } = useTasks({ projectId: currentProject?.id })\r\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey())\r\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false)\r\n\r\n  return (\r\n    <ScreenContiner>\r\n      <Row between={true}>\r\n        <h1>{currentProject?.name}任务组</h1>\r\n        <Button onClick={() => setEpicCreateOpen(true)} type={'link'}>\r\n          创建任务组\r\n        </Button>\r\n      </Row>\r\n      <div style={{ overflow: 'scroll', minHeight: '80vh' }}>\r\n        <List\r\n          dataSource={epics}\r\n          itemLayout={'vertical'}\r\n          renderItem={(epic) => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                title={\r\n                  <Row between={true}>\r\n                    <span>{epic.name}</span>\r\n                    <Button\r\n                      onClick={() => deleteEpic({ id: epic.id })}\r\n                      type={'link'}\r\n                    >\r\n                      删除\r\n                    </Button>\r\n                  </Row>\r\n                }\r\n                description={\r\n                  <div>\r\n                    <div>开始时间:{dayjs(epic.start).format('YYYY-MM-DD')}</div>\r\n                    <div>结束时间:{dayjs(epic.end).format('YYYY-MM-DD')}</div>\r\n                  </div>\r\n                }\r\n              />\r\n              <div>\r\n                {/* 渲染所有属于这个epic的tasks */}\r\n                {tasks\r\n                  ?.filter((task) => task.epicId === epic.id)\r\n                  .map((task) => (\r\n                    <Link\r\n                      to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\r\n                      key={task.id}\r\n                    >\r\n                      {task.name}\r\n                    </Link>\r\n                  ))}\r\n              </div>\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <CreateEpic\r\n          onClose={() => setEpicCreateOpen(false)}\r\n          visible={epicCreateOpen}\r\n        />\r\n      </div>\r\n    </ScreenContiner>\r\n  )\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport {\r\n  Draggable,\r\n  DraggableProps,\r\n  Droppable,\r\n  DroppableProps,\r\n  DroppableProvided,\r\n  DroppableProvidedProps,\r\n} from 'react-beautiful-dnd'\r\n\r\ntype DropProps = Omit<DroppableProps, 'children'> & { children: ReactNode }\r\nexport const Drop = ({ children, ...props }: DropProps) => {\r\n  return (\r\n    <Droppable {...props}>\r\n      {(provided) => {\r\n        if (React.isValidElement(children)) {\r\n          return React.cloneElement(children, {\r\n            ...provided.droppableProps,\r\n            ref: provided.innerRef,\r\n            provided,\r\n          })\r\n        }\r\n        return <div />\r\n      }}\r\n    </Droppable>\r\n  )\r\n}\r\n\r\ntype DropChildProps = Partial<\r\n  { provided: DroppableProvided } & DroppableProvidedProps\r\n> &\r\n  React.HTMLAttributes<HTMLDivElement>\r\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\r\n  ({ children, ...props }, ref) => (\r\n    <div ref={ref} {...props}>\r\n      {children}\r\n      {props.provided?.placeholder}\r\n    </div>\r\n  )\r\n)\r\n\r\ntype DragProps = Omit<DraggableProps, 'children'> & { children: ReactNode }\r\nexport const Drag = ({ children, ...props }: DragProps) => {\r\n  return (\r\n    <Draggable {...props}>\r\n      {(provided) => {\r\n        if (React.isValidElement(children)) {\r\n          return React.cloneElement(children, {\r\n            ...provided.draggableProps,\r\n            ...provided.dragHandleProps,\r\n            ref: provided.innerRef,\r\n          })\r\n        }\r\n        return <div />\r\n      }}\r\n    </Draggable>\r\n  )\r\n}\r\n","// 发请求看板数据请求的hook\r\nimport { QueryKey, useMutation, useQuery } from 'react-query'\r\nimport { Kanban } from 'types/kanban'\r\nimport { useHttp } from './http'\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useReorderKanbanConfig,\r\n} from './use-optimistic-options'\r\n\r\n// 传入的是search-panel里input框和select框里的信息(name和personId)\r\nexport const useKanbans = (param?: Partial<Kanban>) => {\r\n  const client = useHttp() //封装好的发fetch方法\r\n\r\n  // 名为kanbans，param变化的时候自动请求，请求的方法\r\n  return useQuery<Kanban[]>(['kanbans', param], () =>\r\n    client('kanbans', { data: param })\r\n  )\r\n}\r\n\r\nexport const useAddKanban = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    (params: Partial<Kanban>) =>\r\n      client(`kanbans`, {\r\n        method: 'POST',\r\n        data: params,\r\n      }),\r\n    useAddConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport const useDeleteKanban = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`kanbans/${id}`, {\r\n        method: 'DELETE',\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport interface SortProps {\r\n  // 要重新排序的item\r\n  fromId: number | undefined\r\n  // 目标item\r\n  referenceId: number | undefined\r\n  // 放在目标item的前还是后\r\n  type: 'before' | 'after'\r\n\r\n  fromKanbanId?: number\r\n  toKanbanId?: number\r\n}\r\n// 看板重排序\r\nexport const useReorderKanban = (querykey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation((params: SortProps) => {\r\n    return client('kanbans/reorder', {\r\n      data: params,\r\n      method: 'POST',\r\n    })\r\n  }, useReorderKanbanConfig(querykey))\r\n}\r\n","// 发请求task类型请求的hook\r\nimport { useQuery } from 'react-query'\r\nimport { TaskType } from 'types/task-types'\r\nimport { useHttp } from './http'\r\n\r\nexport const useTaskTypes = () => {\r\n  const client = useHttp() //封装好的发fetch方法\r\n\r\n  return useQuery<TaskType[]>(['tasksTypes'], () => client('taskTypes'))\r\n}\r\n","export default __webpack_public_path__ + \"static/media/task.69774797.svg\";","export default __webpack_public_path__ + \"static/media/bug.5d8e8fd5.svg\";","import { Card, Input } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useAddTask } from 'utils/task'\r\nimport { useProjectIdInUrl, useTasksQueryKey } from './util'\r\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\r\n  const [name, setName] = useState('')\r\n  const { mutateAsync: addTask } = useAddTask(useTasksQueryKey())\r\n  const projectId = useProjectIdInUrl()\r\n  // 是否显示input框\r\n  const [inputMode, setInputMode] = useState(false)\r\n\r\n  const submit = async () => {\r\n    setInputMode(false)\r\n\r\n    await addTask({ projectId, name, kanbanId })\r\n    setName('')\r\n  }\r\n\r\n  const toggle = () => setInputMode(!inputMode)\r\n\r\n  useEffect(() => {\r\n    if (!inputMode) {\r\n      setName('')\r\n    }\r\n  }, [inputMode])\r\n  if (!inputMode) {\r\n    return (\r\n      <div onClick={toggle} style={{ paddingLeft: '1.5rem' }}>\r\n        {' '}\r\n        +创建事务\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Input\r\n        onBlur={toggle}\r\n        placeholder={'需要做些什么'}\r\n        autoFocus={true}\r\n        onPressEnter={submit}\r\n        value={name}\r\n        onChange={(evt) => setName(evt.target.value)}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\n// 实现关键字高亮\r\nexport const Mark = ({ name, keyword }: { name: string; keyword: string }) => {\r\n  if (!keyword) {\r\n    return <>{name}</>\r\n  }\r\n  const arr = name.split(keyword)\r\n\r\n  return (\r\n    <>\r\n      {arr.map((str, index) => (\r\n        <span key={index}>\r\n          {str}\r\n          {index === arr.length - 1 ? null : (\r\n            <span style={{ color: '#257AFD' }}>{keyword}</span>\r\n          )}\r\n        </span>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Kanban } from 'types/kanban'\r\nimport { useTaskTypes } from 'utils/task-type'\r\nimport {\r\n  useKanbansQueryKey,\r\n  useTasksInProject,\r\n  useTasksModal,\r\n  useTasksSearchParams,\r\n} from './util'\r\nimport taskIcon from 'assets/task.svg'\r\nimport bugIcon from 'assets/bug.svg'\r\nimport styled from '@emotion/styled'\r\nimport { Button, Card, Dropdown, Menu, Modal } from 'antd'\r\nimport { CreateTask } from './create-task'\r\nimport { Task } from 'types/task'\r\nimport { Mark } from 'components/mark'\r\nimport { useDeleteKanban } from 'utils/kanban'\r\nimport { Row } from 'components/lib'\r\nimport { Drag, Drop, DropChild } from 'components/drag-and-drap'\r\n\r\nconst TaskTypeIcon = ({ id }: { id: number }) => {\r\n  const { data: taskTypes } = useTaskTypes()\r\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name\r\n  if (!name) {\r\n    return null\r\n  }\r\n  // eslint-disable-next-line jsx-a11y/alt-text\r\n  return <img alt={'task-icon'} src={name === 'task' ? taskIcon : bugIcon} />\r\n}\r\n\r\nconst TaskCard = ({ task }: { task: Task }) => {\r\n  const { startEdit } = useTasksModal()\r\n  const { name: keyword } = useTasksSearchParams()\r\n  return (\r\n    <Card\r\n      onClick={() => startEdit(task.id)}\r\n      style={{\r\n        marginBottom: '0.5rem',\r\n        marginLeft: '1rem',\r\n        marginRight: '1rem',\r\n        cursor: 'pointer',\r\n      }}\r\n    >\r\n      <p>\r\n        <Mark keyword={keyword} name={task.name} />\r\n      </p>\r\n      <TaskTypeIcon id={task.typeId}></TaskTypeIcon>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst More = ({ kanban }: { kanban: Kanban }) => {\r\n  const { mutateAsync: deleteKanban } = useDeleteKanban(useKanbansQueryKey())\r\n  const startDelete = () => {\r\n    Modal.confirm({\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      title: '确定删除看板吗',\r\n      onOk: () => {\r\n        return deleteKanban({ id: kanban.id })\r\n      },\r\n    })\r\n  }\r\n\r\n  const overlay = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Button type={'link'} onClick={startDelete}>\r\n          删除\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n  return (\r\n    <Dropdown overlay={overlay}>\r\n      <Button type={'link'}>...</Button>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport const KanbanColumn = React.forwardRef<\r\n  HTMLDivElement,\r\n  { kanban: Kanban }\r\n>(({ kanban, ...props }, ref) => {\r\n  const { data: allTasks } = useTasksInProject()\r\n  const tasks = allTasks?.filter((task) => task.kanbanId === kanban.id) //找到对应tasks\r\n\r\n  return (\r\n    <Container {...props} ref={ref}>\r\n      <Row between={true}>\r\n        <h3 style={{ paddingLeft: '1.5rem' }}>{kanban.name}</h3>\r\n        <More kanban={kanban} key={kanban.id} />\r\n      </Row>\r\n\r\n      <TasksContiner>\r\n        <Drop type={'ROW'} direction={'vertical'} droppableId={kanban.id + ''}>\r\n          <DropChild style={{ minHeight: '5px' }}>\r\n            {tasks?.map((task, index) => (\r\n              <Drag key={task.id} index={index} draggableId={'task' + task.id}>\r\n                <div ref={ref}>\r\n                  <TaskCard task={task} key={task.id || 'zyw666'} />\r\n                </div>\r\n              </Drag>\r\n            ))}\r\n          </DropChild>\r\n        </Drop>\r\n        <CreateTask kanbanId={kanban.id} />\r\n      </TasksContiner>\r\n    </Container>\r\n  )\r\n})\r\n\r\nexport const Container = styled.div`\r\n  min-width: 27rem;\r\n  border-radius: 6px;\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.7rem, 0.7rem, 1rem;\r\n  margin: 1.5rem;\r\n`\r\n\r\nconst TasksContiner = styled.div`\r\n  overflow: scroll;\r\n\r\n  flex: 1;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n","import { Input } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { useAddKanban } from 'utils/kanban'\r\nimport { Container } from './kanban-column'\r\nimport { useKanbansQueryKey, useProjectIdInUrl } from './util'\r\nexport const CreateKanban = () => {\r\n  const [name, setName] = useState('')\r\n  const projectId = useProjectIdInUrl()\r\n  const { mutateAsync: addKanban } = useAddKanban(useKanbansQueryKey())\r\n\r\n  const submit = async () => {\r\n    await addKanban({ name, projectId })\r\n    setName('')\r\n  }\r\n  return (\r\n    <Container>\r\n      {/* // <ColumnContainer> */}\r\n      <Input\r\n        size={'large'}\r\n        placeholder={'新建看板名称'}\r\n        onPressEnter={submit}\r\n        value={name}\r\n        onChange={(evt) => setName(evt.target.value)}\r\n      ></Input>\r\n      {/* </ColumnContainer> */}\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useTaskTypes } from 'utils/task-type'\r\nimport { IdSelect } from './id-select'\r\n\r\nexport const TasksTypeSelect = (\r\n  props: React.ComponentProps<typeof IdSelect>\r\n) => {\r\n  const { data: taskTypes } = useTaskTypes()\r\n  return <IdSelect options={taskTypes || []} {...props}></IdSelect>\r\n}\r\n","import { Button, Input } from 'antd'\r\nimport { Row } from 'components/lib'\r\nimport { TasksTypeSelect } from 'components/task-type-select'\r\nimport { UserSelect } from 'components/user-select'\r\nimport React from 'react'\r\nimport { useSetUrlSearchParam } from 'utils/url'\r\nimport { useTasksSearchParams } from './util'\r\n\r\nexport const SearchPanel = () => {\r\n  const searchParams = useTasksSearchParams()\r\n  const setSearchParams = useSetUrlSearchParam()\r\n\r\n  // 重置\r\n  const reset = () => {\r\n    setSearchParams({\r\n      projectId: undefined,\r\n      typeId: undefined,\r\n      processorId: undefined,\r\n      tagId: undefined,\r\n      name: undefined,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Row marginBottom={4} gap={true}>\r\n      <Input\r\n        style={{ width: '20rem' }}\r\n        placeholder={'任务名'}\r\n        value={searchParams.name}\r\n        onChange={(evt) => setSearchParams({ name: evt.target.value })}\r\n      ></Input>\r\n      <UserSelect\r\n        defaultOptionName={'经办人'}\r\n        value={searchParams.processorId}\r\n        onChange={(value) => setSearchParams({ processorId: value })}\r\n      />\r\n      <TasksTypeSelect\r\n        defaultOptionName={'类型'}\r\n        value={searchParams.typeId}\r\n        onChange={(value) => setSearchParams({ typeId: value })}\r\n      />\r\n      <Button onClick={reset}>清除筛选器</Button>\r\n    </Row>\r\n  )\r\n}\r\n","import { Button, Form, Input, Modal } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport { TasksTypeSelect } from 'components/task-type-select'\r\nimport { UserSelect } from 'components/user-select'\r\nimport React, { useEffect } from 'react'\r\nimport { useDeleteTask, useEditTask } from 'utils/task'\r\nimport { useTasksModal, useTasksQueryKey } from './util'\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n}\r\n\r\nexport const TaskModal = () => {\r\n  const [form] = useForm()\r\n  const { editingTaskId, editingTask, close } = useTasksModal()\r\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(\r\n    useTasksQueryKey()\r\n  )\r\n\r\n  const { mutateAsync: deleteTask } = useDeleteTask(useTasksQueryKey())\r\n\r\n  const onCancel = () => {\r\n    close()\r\n    form.resetFields()\r\n  }\r\n\r\n  const onOk = async () => {\r\n    await editTask({ ...editingTask, ...form.getFieldsValue() })\r\n    close()\r\n  }\r\n  const startDelete = () => {\r\n    close()\r\n    Modal.confirm({\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      title: '确定删除任务吗',\r\n      onOk: () => {\r\n        return deleteTask({ id: Number(editingTaskId) })\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(editingTask)\r\n  }, [form, editingTask])\r\n\r\n  return (\r\n    <Modal\r\n      forceRender={true}\r\n      onCancel={onCancel}\r\n      onOk={onOk}\r\n      okText={'确认'}\r\n      cancelText={'取消'}\r\n      confirmLoading={editLoading}\r\n      title={'编辑任务'}\r\n      visible={!!editingTaskId}\r\n    >\r\n      <Form {...layout} initialValues={editingTask} form={form}>\r\n        <Form.Item\r\n          label={'任务名'}\r\n          name={'name'}\r\n          rules={[{ required: true, message: '请输入任务名' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label={'经办人'} name={'processorId'}>\r\n          <UserSelect defaultOptionName=\"经办人\" />\r\n        </Form.Item>\r\n        <Form.Item label={'类型'} name={'typeId'}>\r\n          <TasksTypeSelect />\r\n        </Form.Item>\r\n      </Form>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button\r\n          onClick={startDelete}\r\n          style={{ fontSize: '14px' }}\r\n          size={'small'}\r\n        >\r\n          删除\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import styled from '@emotion/styled'\r\nimport Spin from 'antd/lib/spin'\r\nimport { Drag, Drop, DropChild } from 'components/drag-and-drap'\r\nimport { ScreenContiner } from 'components/lib'\r\nimport React, { useCallback } from 'react'\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd'\r\n\r\nimport { useDocumentTitle } from 'utils'\r\nimport { useKanbans, useReorderKanban } from 'utils/kanban'\r\nimport { useReorderTask, useTasks } from 'utils/task'\r\nimport { CreateKanban } from './create-kanban'\r\nimport { KanbanColumn } from './kanban-column'\r\nimport { SearchPanel } from './search-panel'\r\nimport { TaskModal } from './task-modal'\r\nimport {\r\n  useKanbanSearchParams,\r\n  useKanbansQueryKey,\r\n  useProjectInUrl,\r\n  useTasksQueryKey,\r\n  useTasksSearchParams,\r\n} from './util'\r\n\r\nexport const Kanban = () => {\r\n  useDocumentTitle('看板列表')\r\n  const { data: currentProject } = useProjectInUrl()\r\n  const { data: kanbans, isLoading: kanbanIsLoading } = useKanbans(\r\n    useKanbanSearchParams()\r\n  )\r\n  const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams())\r\n  const isLoading = kanbanIsLoading || taskIsLoading\r\n\r\n  const onDragEnd = useDragEnd()\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <ScreenContiner>\r\n        <Top>\r\n          <h1>{currentProject?.name}看板</h1>\r\n          <SearchPanel />\r\n        </Top>\r\n\r\n        {isLoading ? (\r\n          <Spin size={'large'} />\r\n        ) : (\r\n          <ColumnContainer>\r\n            <Drop\r\n              type={'COLUMN'}\r\n              direction={'horizontal'}\r\n              droppableId={'kanban'}\r\n            >\r\n              <DropChild style={{ display: 'flex' }}>\r\n                {kanbans?.map((kanban, index) => (\r\n                  <Drag\r\n                    key={kanban.id}\r\n                    draggableId={'kanban' + kanban.id}\r\n                    index={index}\r\n                  >\r\n                    <KanbanColumn kanban={kanban} key={kanban.id} />\r\n                  </Drag>\r\n                ))}\r\n              </DropChild>\r\n            </Drop>\r\n            <CreateKanban />\r\n          </ColumnContainer>\r\n        )}\r\n        <TaskModal />\r\n      </ScreenContiner>\r\n    </DragDropContext>\r\n  )\r\n}\r\n\r\nexport const useDragEnd = () => {\r\n  const { data: kanbans } = useKanbans(useKanbanSearchParams())\r\n  const { mutate: reorderKanban } = useReorderKanban(useKanbansQueryKey())\r\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey())\r\n  const { data: allTasks } = useTasks(useTasksSearchParams())\r\n  return useCallback(\r\n    ({ source, destination, type }: DropResult) => {\r\n      if (!destination) {\r\n        return\r\n      }\r\n      // 看板排序\r\n      if (type === 'COLUMN') {\r\n        const fromId = kanbans?.[source.index].id\r\n        const toId = kanbans?.[destination.index].id\r\n        if (!fromId || !toId || fromId === toId) {\r\n          return\r\n        }\r\n        const type = destination.index > source.index ? 'after' : 'before'\r\n        reorderKanban({ fromId, referenceId: toId, type })\r\n      }\r\n      // task排序\r\n      if (type === 'ROW') {\r\n        const fromKanbanId = +source.droppableId\r\n        const toKanbanId = +destination.droppableId\r\n        // 同看板排序\r\n        // if (fromKanbanId === toKanbanId) {\r\n        //   return\r\n        // }\r\n        const fromTask = allTasks?.filter(\r\n          (task) => task.kanbanId === fromKanbanId\r\n        )[source.index]\r\n        const toTask = allTasks?.filter((task) => task.kanbanId === toKanbanId)[\r\n          destination.index\r\n        ]\r\n        if (fromTask?.id === toTask?.id) {\r\n          return\r\n        }\r\n        // if (fromTask?.id && toTask?.id)\r\n        reorderTask({\r\n          fromId: fromTask?.id,\r\n          referenceId: toTask?.id,\r\n          fromKanbanId,\r\n          toKanbanId,\r\n          type:\r\n            fromKanbanId === toKanbanId && destination.index > source.index\r\n              ? 'after'\r\n              : 'before',\r\n        })\r\n      }\r\n    },\r\n    [kanbans, reorderKanban, allTasks, reorderTask]\r\n  )\r\n}\r\n\r\nexport const ColumnContainer = styled.div`\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  flex: 1;\r\n`\r\n\r\nconst Top = styled.div`\r\n  margin-left: 1.5rem;\r\n`\r\n","import styled from '@emotion/styled'\r\nimport { Menu } from 'antd'\r\nimport React from 'react'\r\nimport { Routes, Route, Navigate, useLocation } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { Epic } from 'screens/Epic'\r\nimport { Kanban } from 'screens/Kanban'\r\n\r\n// 判断此时路由，来选择高亮\r\nconst useRouteType = () => {\r\n  const units = useLocation().pathname.split('/')\r\n  return units[units.length - 1]\r\n}\r\nexport const Project = () => {\r\n  const routeType = useRouteType()\r\n  return (\r\n    <Continer>\r\n      <Aside>\r\n        <Menu mode={'inline'} selectedKeys={[routeType]}>\r\n          <Menu.Item key={'kanban'}>\r\n            <Link to={'kanban'}>看板</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={'epic'}>\r\n            <Link to={'epic'}>任务组</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Aside>\r\n      <Main>\r\n        <Routes>\r\n          <Route path={'kanban'} element={<Kanban />}></Route>\r\n          <Route path={'epic'} element={<Epic />}></Route>\r\n          {/* 上面没有匹配到，则跳转到看板 */}\r\n          <Route\r\n            // 都没匹配到则跳转到看板\r\n            path={'*'}\r\n            element={\r\n              <Navigate\r\n                to={window.location.pathname + '/kanban'}\r\n                replace={true}\r\n              ></Navigate>\r\n            }\r\n          ></Route>\r\n        </Routes>\r\n      </Main>\r\n    </Continer>\r\n  )\r\n}\r\n\r\nconst Aside = styled.aside`\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n`\r\nconst Main = styled.div`\r\n  display: flex;\r\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n`\r\n\r\nconst Continer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 16rem 1fr;\r\n  overflow: hidden;\r\n`\r\n","import styled from '@emotion/styled'\r\nimport { Divider, List, Popover, Typography } from 'antd'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useProjectModal } from 'screens/project-list/util'\r\nimport { useProjects } from 'utils/project'\r\nimport { ButtonNopadding } from './lib'\r\n\r\nexport const ProjectPopover = () => {\r\n  const { open } = useProjectModal()\r\n  const { data: projects, refetch } = useProjects()\r\n  const pinnedProjects = projects?.filter((project) => project.pin)\r\n  const content = (\r\n    <ContentContainer>\r\n      <Typography.Text type={'secondary'}></Typography.Text>\r\n      <List>\r\n        {pinnedProjects?.map((project) => (\r\n          <List.Item key={project.id}>\r\n            <Link to={`/projects/${project.id}`}>{project.name}</Link>\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <ButtonNopadding onClick={open} type={'link'}>\r\n        创建项目\r\n      </ButtonNopadding>\r\n    </ContentContainer>\r\n  )\r\n  return (\r\n    <Popover\r\n      // 刷新，添加收藏或者取消收藏后刷新一下\r\n      onVisibleChange={() => refetch()}\r\n      placement={'bottom'}\r\n      content={content}\r\n    >\r\n      <span>项目</span>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`\r\n","import styled from '@emotion/styled'\r\nimport { Divider, List, Popover, Typography } from 'antd'\r\nimport React from 'react'\r\nimport { useUsers } from 'utils/user'\r\n\r\nexport const UserPopover = () => {\r\n  const { data: users, refetch } = useUsers()\r\n  const content = (\r\n    <ContentContainer>\r\n      <Typography.Text type={'secondary'}>组员列表</Typography.Text>\r\n      <List>\r\n        {users?.map((user) => (\r\n          <List.Item key={user.id}>\r\n            <List.Item.Meta title={user.name} />\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </ContentContainer>\r\n  )\r\n  return (\r\n    <Popover\r\n      onVisibleChange={() => refetch()}\r\n      placement={'bottom'}\r\n      content={content}\r\n    >\r\n      <span>组员</span>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`\r\n","import React from 'react'\r\nimport { ProjectList } from './screens/project-list'\r\nimport { useAuth } from 'context/auth-context'\r\nimport styled from '@emotion/styled'\r\nimport { ButtonNopadding, Row } from 'components/lib'\r\nimport { Navigate, Route, Routes } from 'react-router'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n// 以组件的形式渲染svg\r\nimport { ReactComponent as SoftwareLogo } from 'assets/software-logo.svg'\r\nimport { Button, Dropdown, Menu } from 'antd'\r\nimport { Project } from 'screens/project'\r\nimport { resetRoute } from 'utils'\r\nimport { ProjectModel } from 'screens/project-list/project-model'\r\nimport { ProjectPopover } from 'components/project-popver'\r\nimport { createBrowserHistory } from 'history'\r\nimport { UserPopover } from 'components/user-popover'\r\n\r\n//登录后页面\r\nexport const AuthenticatedApp = () => {\r\n  // 直接把组件作为props传递下去，解决耦合问题，但会把高层组件便复杂\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <PageHeader />\r\n        {/* <Button onClick={() => setProjectModelOpen(true)}>打开</Button> */}\r\n        <Main>\r\n          {/* 项目界面 */}\r\n\r\n          <Routes>\r\n            <Route path={'/projects'} element={<ProjectList />}></Route>\r\n            <Route\r\n              path={'/projects/:projectId/*'}\r\n              element={<Project />}\r\n            ></Route>\r\n            <Route\r\n              // 都没匹配到则跳转到project\r\n              path={'*'}\r\n              element={<Navigate to=\"/projects\"></Navigate>}\r\n            ></Route>\r\n          </Routes>\r\n        </Main>\r\n        <ProjectModel />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst PageHeader = () => {\r\n  return (\r\n    <Header between={true}>\r\n      <HeaderLeft gap={true}>\r\n        {/* 点击返回主页面 */}\r\n        <ButtonNopadding type={'link'} onClick={resetRoute}>\r\n          <SoftwareLogo width={'18rem'} color={'rgb(38,132,255'} />\r\n        </ButtonNopadding>\r\n        <ProjectPopover />\r\n        <UserPopover />\r\n      </HeaderLeft>\r\n      <HeaderRight>\r\n        <User />\r\n      </HeaderRight>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst User = () => {\r\n  const { logout: lgout, user } = useAuth()\r\n  const logout = () => {\r\n    createBrowserHistory().replace('/') //退出后清除params\r\n    lgout()\r\n  }\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <Menu>\r\n          <Menu.Item key={'logout'}>\r\n            <Button type={'link'} onClick={logout}>\r\n              登出\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu>\r\n      }\r\n    >\r\n      <Button type={'link'} onClick={(e) => e.preventDefault()}>\r\n        Hi,{user?.name}\r\n      </Button>\r\n    </Dropdown>\r\n  )\r\n}\r\n// 这个存在暂时性死区里面的，所以在后面声明，前面知道后面可能有，只是不能访问\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 6rem 1fr;\r\n  height: 100vh;\r\n`\r\n\r\nconst Header = styled(Row)`\r\n  padding: 3.2rem;\r\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\r\n  z-index: 1;\r\n`\r\nconst HeaderLeft = styled(Row)``\r\n\r\nconst HeaderRight = styled.div``\r\n\r\nconst Main = styled.main`\r\n  display: grid;\r\n  height: calc(100vh- 6rem);\r\n  /* display: flex; */\r\n  /* overflow-anchor: none; */\r\n  overflow: hidden;\r\n`\r\n","// 错误边界，不设置的话，一旦发生错误，整个组件树都会被卸载\r\nimport React from 'react'\r\n\r\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement\r\nexport class ErrorBoundary extends React.Component<\r\n  { children: React.ReactNode; fallbackRender: FallbackRender },\r\n  { error: Error | null }\r\n> {\r\n  state = { error: null }\r\n\r\n  // 当ErrorBoundary的子组件发生错误时，这个方法就会被调用，返回的值就会被赋给state\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { error }\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state\r\n    const { fallbackRender, children } = this.props\r\n    if (error) {\r\n      return fallbackRender({ error })\r\n    }\r\n    return children\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport { useAuth } from 'context/auth-context'\r\nimport { UnauthenticatedApp } from 'unauthenticated-app'\r\nimport { AuthenticatedApp } from './authenticated-app'\r\nimport { FullPageErrorFallback } from 'components/lib'\r\nimport { ErrorBoundary } from 'components/error-boundary'\r\n\r\nfunction App() {\r\n  const { user } = useAuth()\r\n  return (\r\n    <div className=\"App\">\r\n      {/* 错误边界 */}\r\n      {/* 子组件遇到错误时，会展现出来，不这样的话整个组件都会被卸载 */}\r\n      <ErrorBoundary fallbackRender={FullPageErrorFallback}>\r\n        {/* 通过判断user是否存在来选择呈现页面是已登录还是未登录 */}\r\n        {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\r\n      </ErrorBoundary>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { ReactNode } from 'react'\r\nimport { AuthProvider } from 'context/auth-context'\r\nimport { QueryClient, QueryClientProvider } from 'react-query'\r\n\r\n// 封装组件AppProvider 实现里面包裹的组件都可以共享AuthProvider里面的属性与方法 value={{ user, login, register, logout }}\r\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\r\n  const queryClient = new QueryClient()\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <AuthProvider>{children}</AuthProvider>\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n","import './wdyr'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// import 'antd/dist/antd.less'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { AppProviders } from './context'\n\n// 将项目连接到真实的server  以service worker为原理实现分布式后端\n// import { loadDevTools } from 'jira-dev-tool'\nimport { loadServer, DevTools } from 'jira-dev-tool'\n\n//在jira-dev-tool后引入，覆盖样式\nimport 'antd/dist/antd.less'\n\nloadServer(() =>\n  // 严格模式\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <DevTools />\n        <App />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById('root') as HTMLElement\n  )\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}